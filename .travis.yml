sudo: required #is required to use docker service in travis
language: csharp

env:
  - environment=Development
  - APP_NAME=rainbow-api
  - AWS_ECR_ACCOUNT=860436917626
  - AWS_ACCESS_KEY_ID=AKIAJG4PXAIR5DQTNS2Q
  - AWS_SECRET_ACCESS_KEY=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

services:
  - docker

mono: none
dotnet: 3.1

before_script:
  - sudo pip install awscli
  - export PATH=$PATH:$HOME/.local/bin
  # - aws configure set AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
  # - aws configure set AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
  # - aws configure set AWS_DEFAULT_REGION=AP-NORTHEAST-2

install:
  - dotnet restore ".\RainbowApp.sln"

script:
  - dotnet build ".\RainbowApp.sln" -c Release

after_success:
  - aws configure set AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  - aws configure set AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  - aws configure set AWS_DEFAULT_REGION=AP-NORTHEAST-2
  - eval $(aws ecr get-login --no-include-email --region ap-northeast-2)
  # - docker build -t rainbow-api --build-arg ASPNETCORE_ENVIRONMENT=Development --build-arg AWS_DEFAULT_REGION=AP-NORTHEAST-2 --build-arg AWS_ACCESS_KEY_ID=AKIAJG4PXAIR5DQTNS2Q --build-arg AWS_SECRET_ACCESS_KEY=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 .
  # - docker tag rainbowappapi:latest 860436917626.dkr.ecr.ap-northeast-2.amazonaws.com/rainbow-api:development
  # - docker images
  # - docker push 860436917626.dkr.ecr.ap-northeast-2.amazonaws.com/rainbow-api:development
  - docker build -t rainbow-api --build-arg ASPNETCORE_ENVIRONMENT=${environment} --build-arg AWS_DEFAULT_REGION=AP-NORTHEAST-2 --build-arg AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} --build-arg AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} .
  #- docker tag $APP_NAME:$TRAVIS_BUILD_ID $AWS_ECR_ACCOUNT.dkr.ecr.us-east-1.amazonaws.com/$APP_NAME:$TRAVIS_BUILD_ID
  - docker tag rainbowappapi:latest ${AWS_ECR_ACCOUNT}.dkr.ecr.ap-northeast-2.amazonaws.com/$APP_NAME:${environment}
  #- docker push $AWS_ECR_ACCOUNT.dkr.ecr.us-east-1.amazonaws.com/$APP_NAME:$TRAVIS_BUILD_ID
  - docker push ${AWS_ECR_ACCOUNT}.dkr.ecr.ap-northeast-2.amazonaws.com/$APP_NAME:${environment}

# sudo: required #is required to use docker service in travis

# language: generic #can be any language, just php for example

# env:
#   - environment=Development
#   - APP_NAME=rainbow-api
#   - AWS_ECR_ACCOUNT=860436917626
#   - AWS_ACCESS_KEY_ID=AKIAJG4PXAIR5DQTNS2Q
#   - AWS_SECRET_ACCESS_KEY=jJpdCwqNvKdmHC9TQ92wyehf66AMG9VcW8/tbQou

# services:
#   - docker # required, but travis uses older version of docker :(

# # install:
# #   - echo "install nothing!" # put your normal pre-testing installs here

# # script:
# #   - echo "no tests!" # put your normal testing scripts here

# after_success:
#   - docker --version  # document the version travis is using
#   - pip install --user awscli # install aws cli w/o sudo
#   - export PATH=$PATH:$HOME/.local/bin # put aws in the path
#   - eval $(aws ecr get-login --no-include-email --region ap-northeast-2)
#   - docker build -t rainbow-api --build-arg ASPNETCORE_ENVIRONMENT=$environment --build-arg AWS_DEFAULT_REGION=AP-NORTHEAST-2 --build-arg AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY .
#   - docker tag rainbowappapi:latest $AWS_ECR_ACCOUNT.dkr.ecr.ap-northeast-2.amazonaws.com/$APP_NAME:$environment
#   - docker push $AWS_ECR_ACCOUNT.dkr.ecr.ap-northeast-2.amazonaws.com/$APP_NAME:$environment
  